{"version":3,"sources":["Utils/BenchmarksData.ts","Icons/sprite.svg","Components/Svg/Svg.tsx","Components/Modal/ModalStyled.ts","Components/Modal/Modal.tsx","Components/Benchmarks/AddBenchmarkForm/AddBenchmarkFormStyled.ts","Components/Benchmarks/AddBenchmarkForm/AddBenchmarkForm.tsx","Components/Benchmarks/BenchmarkItem/BenchmarkItemStyled.tsx","Components/Benchmarks/BenchmarkItem/BenchmarkItem.tsx","Components/Benchmarks/BenchmarksList/BenchmarksListStyled.tsx","Components/Benchmarks/BenchmarksList/BenchmarksList.tsx","Components/Benchmarks/BenchmarksTable/BenchmarksTableStyled.tsx","Components/Benchmarks/BenchmarksTable/BenchmarksTable.tsx","Components/Benchmarks/BenchmarksStyled.tsx","Components/Benchmarks/Benchmarks.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BenchmarksData","id","title","allocations","value","security","indices","period","Svg","icon","width","height","href","sprite","ModalContainer","styled","div","modalRoot","document","querySelector","Modal","closeModal","children","handleKeyDown","e","code","useEffect","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","currentTarget","target","className","type","BenchmarkFormContainer","AddBenchmarkForm","benchmarksData","onSubmit","useState","benchmark","setBenchmark","handleChange","event","console","log","name","prevState","preventDefault","htmlFor","onChange","map","required","length","slice","BenchmarkItemContainer","li","BenchmarkItem","BenchmarksListContainer","BenchmarksList","StyledContainer","StyledFlexContainer","StyledHeader","h2","StyledLabel","label","StyledText","p","StyledSpan","span","StyledButton","button","StyledButtonText","BenchmarksTable","showModal","setShowModal","showBenchmarks","setShowBenchmarks","setBenchmarksData","toggleModal","checked","updateBenchmarksData","item","h1","Benchmarks","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8404e3fb.chunk.js","sourcesContent":["import { Benchmarks } from \"./Types\";\r\n\r\nconst BenchmarksData: Benchmarks[] = [\r\n  {\r\n    id: \"Total Performance 1\",\r\n    title: \"Dow Jones Industrial Average\",\r\n    allocations: [\r\n      { value: \"100%\", title: \"Dow Jones Industrial Average\", security: false },\r\n    ],\r\n    indices: [\r\n      { period: \"1 YR\", value: \"+27.71\" },\r\n      { period: \"5 YR\", value: \"+27.71\" },\r\n      { period: \"10 YR\", value: \"+27.71\" },\r\n    ],\r\n  },\r\n  {\r\n    id: \"Total Performance 2\",\r\n    title: \"Private Label Domestic Growth\",\r\n    allocations: [\r\n      { value: \"20%\", title: \"APPL\", security: true },\r\n      { value: \"20%\", title: \"CTXS\", security: true },\r\n      { value: \"20%\", title: \"DELL\", security: true },\r\n      { value: \"20%\", title: \"Dow Jones\", security: false },\r\n      { value: \"20%\", title: \"NASDAQ\", security: false },\r\n    ],\r\n    indices: [\r\n      { period: \"1 YR\", value: \"+27.71\" },\r\n      { period: \"5 YR\", value: \"+27.71\" },\r\n      { period: \"10 YR\", value: \"+27.71\" },\r\n    ],\r\n  },\r\n  {\r\n    id: \"Total Performance 3\",\r\n    title: \"Private Label Value\",\r\n    allocations: [\r\n      { value: \"10%\", title: \"APPL\", security: true },\r\n      { value: \"10%\", title: \"CTXS\", security: true },\r\n      { value: \"10%\", title: \"DELL\", security: true },\r\n      { value: \"10%\", title: \"GOOGL\", security: true },\r\n      { value: \"10%\", title: \"IBM\", security: true },\r\n      { value: \"10%\", title: \"Dow Jones\", security: false },\r\n      { value: \"10%\", title: \"FTSE 100 Index\", security: false },\r\n      { value: \"10%\", title: \"FTSE 250 Index\", security: false },\r\n      { value: \"20%\", title: \"NASDAQ\", security: false },\r\n    ],\r\n    indices: [\r\n      { period: \"1 YR\", value: \"+27.71\" },\r\n      { period: \"5 YR\", value: \"+27.71\" },\r\n      { period: \"10 YR\", value: \"+27.71\" },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default BenchmarksData;\r\n","export default __webpack_public_path__ + \"static/media/sprite.b8f148a9.svg\";","import React from \"react\";\r\n\r\nimport sprite from \"../../Icons/sprite.svg\";\r\n\r\ntype Props = {\r\n  icon: string;\r\n  width?: string;\r\n  height?: string;\r\n};\r\n\r\nconst Svg = ({ icon, width = \"15px\", height = \"15px\" }: Props) => {\r\n  return (\r\n    <svg width={width} height={height}>\r\n      <use href={sprite + icon} />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Svg;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  background-color: rgba(24, 28, 39, 0.25);\r\n  z-index: 1200;\r\n\r\n  .modal {\r\n    position: relative;\r\n    overflow-x: auto;\r\n    height: 100%;\r\n    width: 530px;\r\n    padding: 60px 20px;\r\n    background-color: #fff;\r\n  }\r\n\r\n  .closeBtn {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 60px;\r\n    border: none;\r\n    background-color: transparent;\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Svg from \"../Svg/Svg\";\r\nimport { ModalContainer } from \"./ModalStyled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\") as HTMLElement;\r\n\r\ntype Props = {\r\n  closeModal: () => void;\r\n  children: React.ReactNode;\r\n};\r\n\r\nfunction Modal({ closeModal, children }: Props) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    document.body.style.overflow = \"hidden\";\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      document.body.style.overflow = \"\";\r\n    };\r\n  }, []); /* eslint-disable-line*/\r\n\r\n  function onCloseBtnClick() {\r\n    closeModal();\r\n  }\r\n\r\n  function handleKeyDown(e: KeyboardEvent) {\r\n    if (e.code === \"Escape\") {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  function handleBackdropClick(e: React.MouseEvent<HTMLDivElement>) {\r\n    if (e.currentTarget === e.target) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <ModalContainer onClick={handleBackdropClick}>\r\n      <div className=\"modal\">\r\n        <button\r\n          onClick={onCloseBtnClick}\r\n          type=\"button\"\r\n          aria-label=\"close-button\"\r\n          className=\"closeBtn\"\r\n        >\r\n          <Svg icon=\"#icon-cross\" width=\"20px\" height=\"20px\" />\r\n        </button>\r\n        {children}\r\n      </div>\r\n    </ModalContainer>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BenchmarkFormContainer = styled.div`\r\n  .formTitle {\r\n    margin-bottom: 20px;\r\n\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n\r\n    &:after {\r\n      content: \"\";\r\n      margin-top: 15px;\r\n      background-color: rgb(197, 194, 194);\r\n      height: 2px;\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  .formDescription {\r\n    line-height: 1.3;\r\n  }\r\n\r\n  .formContainer {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  .colorWrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 20px;\r\n    padding: 7px;\r\n    border-bottom: 1px solid grey;\r\n    background-color: rgb(237, 234, 234);\r\n  }\r\n  .label {\r\n    font-size: 12px;\r\n    margin-bottom: 5px;\r\n    padding-left: 2px;\r\n  }\r\n\r\n  .benchmarkId {\r\n    width: 100%;\r\n    background-color: transparent;\r\n    border: none;\r\n\r\n    &:hover,\r\n    &:focus {\r\n      border: none;\r\n    }\r\n  }\r\n  .input {\r\n    width: 100%;\r\n    background-color: transparent;\r\n    border: none;\r\n  }\r\n\r\n  .validationRules {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 5px 10px;\r\n    font-size: 12px;\r\n    color: grey;\r\n  }\r\n\r\n  .inputWrapperSmall {\r\n    width: 30%;\r\n  }\r\n  .colorWrapperSmall {\r\n    display: flex;\r\n    padding: 7px;\r\n    border-bottom: 1px solid grey;\r\n    background-color: rgb(237, 234, 234);\r\n  }\r\n\r\n  .indexRow {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n","import { useState } from \"react\";\r\nimport { Benchmarks } from \"../../../Utils/Types\";\r\nimport { BenchmarkFormContainer } from \"./AddBenchmarkFormStyled\";\r\n\r\ninterface Props {\r\n  benchmarksData: Benchmarks[];\r\n  closeModal: () => void;\r\n  onSubmit: (benchmark: Benchmarks) => void;\r\n}\r\n\r\nconst AddBenchmarkForm = ({ benchmarksData, closeModal, onSubmit }: Props) => {\r\n  const [benchmark, setBenchmark] = useState(benchmarksData[0]);\r\n\r\n  const handleSelect = (event: React.FormEvent<HTMLSelectElement>) => {\r\n    setBenchmark((prevState) => ({\r\n      ...prevState,\r\n      id: event.currentTarget.value,\r\n    }));\r\n  };\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    console.log(event);\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      // case \"id\":\r\n      //   setBenchmark((prevState) => ({ ...prevState, id: value }));\r\n      //   break;\r\n      case \"title\":\r\n        setBenchmark((prevState) => ({ ...prevState, title: value }));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    onSubmit(benchmark);\r\n    setBenchmark(benchmarksData[0]);\r\n  };\r\n\r\n  return (\r\n    <BenchmarkFormContainer>\r\n      <h3 className=\"formTitle\">Add a New Benchmark</h3>\r\n      <p className=\"formDescription\">\r\n        A benchmark can be made up of one or more indices, securities or a\r\n        combination of both. It can be assigned to an empty slot, a slot in use\r\n        or be not assigned. For a slot in use it will replace that benchmark\r\n        which will then be changed to not assigned.\r\n      </p>\r\n      <form className=\"formContainer\" onSubmit={handleSubmit}>\r\n        <div className=\"colorWrapper\">\r\n          <label className=\"label\" htmlFor=\"benchmarkId\">\r\n            Assign To*\r\n          </label>\r\n          <select\r\n            className=\"benchmarkId\"\r\n            id=\"benchmarkId\"\r\n            name=\"id\"\r\n            onChange={handleSelect}\r\n            value={benchmark.id}\r\n          >\r\n            {benchmarksData.map(({ id }) => (\r\n              <option value={id} key={id}>\r\n                {id}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"inputWrapper\">\r\n          <div className=\"colorWrapper\">\r\n            <label className=\"label\" htmlFor=\"benchmarkTitle\">\r\n              Name*\r\n            </label>\r\n            <input\r\n              className=\"input\"\r\n              id=\"benchmarkTitle\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={benchmark.title}\r\n              required\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"validationRules\">\r\n            <span>Only Alpha Numeric</span>\r\n            <span className=\"validationResult\">\r\n              {benchmark.title.length}/ 50\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"indexRow\">\r\n          <span>--</span>\r\n          <label>\r\n            Index\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              value={benchmark.allocations[0].title}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <div className=\"inputWrapperSmall\">\r\n            <div className=\"colorWrapperSmall\">\r\n              <input\r\n                className=\"input\"\r\n                id=\"indexValue\"\r\n                name=\"title\"\r\n                value={benchmark.allocations[0].value.slice(0, -1)}\r\n                onChange={handleChange}\r\n              />\r\n              <label htmlFor=\"indexValue\">%</label>\r\n            </div>\r\n            <div className=\"validationRules\">\r\n              <span>Numeric </span>\r\n              <span>{benchmark.allocations[0].value.length - 1}/3</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <label>\r\n          <input\r\n            name=\"title\"\r\n            value={benchmark.allocations[0].value}\r\n            onChange={handleChange}\r\n          />\r\n          %\r\n        </label>\r\n        <span>Must total 100%</span>\r\n\r\n        <span>View Available Indices</span>\r\n        <span>add a component to this benchmark</span>\r\n        <button type=\"button\">Search for an Index or Security</button>\r\n\r\n        <button type=\"button\">+</button>\r\n        <button type=\"button\" onClick={closeModal}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Save Benchmark</button>\r\n      </form>\r\n    </BenchmarkFormContainer>\r\n  );\r\n};\r\n\r\nexport default AddBenchmarkForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BenchmarkItemContainer = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 14px;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n\r\n  .firstColumn {\r\n    width: 20%;\r\n    border-right: 1px solid grey;\r\n  }\r\n  .secondColumn {\r\n    width: 25%;\r\n  }\r\n\r\n  //////////////////////// thirdColumn\r\n  .thirdColumn {\r\n    width: 35%;\r\n  }\r\n\r\n  .groupTitle {\r\n    text-transform: uppercase;\r\n    font-size: 10px;\r\n    font-weight: 600;\r\n    color: #9db658;\r\n  }\r\n  .allocationsList {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 3px;\r\n  }\r\n  .allocationsItem {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    //flex-basis: calc(100% / 5 - 3px);\r\n    width: 55px;\r\n    margin-right: 3px;\r\n    margin-bottom: 5px;\r\n    font-size: 10px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n  }\r\n\r\n  .index {\r\n    width: 100%;\r\n    height: 22px;\r\n    line-height: 22px;\r\n    border: 1px solid rgb(197, 194, 194);\r\n  }\r\n\r\n  .security {\r\n    width: 100%;\r\n    height: 22px;\r\n    line-height: 22px;\r\n    background-color: rgb(197, 194, 194);\r\n  }\r\n  .allocationTitle {\r\n    width: 100%;\r\n    margin-top: 3px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    word-break: break-all;\r\n  }\r\n\r\n  //////////////////////// fourthColumn\r\n  .fourthColumn {\r\n    width: 15%;\r\n  }\r\n\r\n  .indicesList {\r\n    display: flex;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .indicesItem {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    flex-basis: calc(100% / 3 - 5px);\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .indexPeriod {\r\n    margin-bottom: 7px;\r\n    text-transform: uppercase;\r\n    font-size: 10px;\r\n    font-weight: 600;\r\n    color: #9db658;\r\n  }\r\n\r\n  .fifthColumn {\r\n    width: 5%;\r\n    border: none;\r\n    background-color: transparent;\r\n    transform: rotate(90deg);\r\n  }\r\n`;\r\n","import { Allocation, Index } from \"../../../Utils/Types\";\r\nimport { BenchmarkItemContainer } from \"./BenchmarkItemStyled\";\r\n\r\ntype Props = {\r\n  id: string;\r\n  title: string;\r\n  allocations: Allocation[];\r\n  indices: Index[];\r\n};\r\n\r\nfunction BenchmarkItem({ id, title, allocations, indices }: Props) {\r\n  return (\r\n    <BenchmarkItemContainer>\r\n      <span className=\"firstColumn\">{id}</span>\r\n      <span className=\"secondColumn\">{title}</span>\r\n      <div className=\"thirdColumn\">\r\n        <span className=\"groupTitle\">allocations</span>\r\n        <ul className=\"allocationsList\">\r\n          {allocations.map(({ value, title, security }) => (\r\n            <li className=\"allocationsItem\" key={title}>\r\n              <span className={security ? \"security\" : \"index\"}>{value}</span>\r\n              <span className=\"allocationTitle\">{title}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"fourthColumn\">\r\n        <ul className=\"indicesList\">\r\n          {indices.map(({ period, value }) => (\r\n            <li className=\"indicesItem\" key={period}>\r\n              <span className=\"indexPeriod\">{period}</span>\r\n              <span className=\"indexValue\">{value}</span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <button className=\"fifthColumn\" type=\"button\">\r\n        ...\r\n      </button>\r\n    </BenchmarkItemContainer>\r\n  );\r\n}\r\n\r\nexport default BenchmarkItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BenchmarksListContainer = styled.div`\r\n  .descriptionContainer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-left: 45%;\r\n    margin-right: 5%;\r\n  }\r\n  .wrapper {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .label {\r\n    font-size: 10px;\r\n\r\n    &:not(:last-child) {\r\n      margin-right: 15px;\r\n    }\r\n  }\r\n\r\n  .input {\r\n    height: 10px;\r\n    width: 10px;\r\n    margin-right: 5px;\r\n\r\n    &:not(:last-child) {\r\n      border: none;\r\n    }\r\n  }\r\n\r\n  .listDescription {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n","import { Benchmarks } from \"../../../Utils/Types\";\r\nimport BenchmarkItem from \"../BenchmarkItem/BenchmarkItem\";\r\nimport { BenchmarksListContainer } from \"./BenchmarksListStyled\";\r\n\r\ntype Props = {\r\n  benchmarksData: Benchmarks[];\r\n};\r\n\r\nfunction BenchmarksList({ benchmarksData }: Props) {\r\n  return (\r\n    <BenchmarksListContainer>\r\n      <div className=\"descriptionContainer\">\r\n        <div className=\"wrapper\">\r\n          <input type=\"checkbox\" className=\"input\" id=\"security\" />\r\n          <label htmlFor=\"security\" className=\"label\">\r\n            Security\r\n          </label>\r\n          <input type=\"checkbox\" className=\"input\" id=\"index\" />\r\n          <label htmlFor=\"index\" className=\"label\">\r\n            Index\r\n          </label>\r\n        </div>\r\n        <span className=\"listDescription\">5 YR & 10 YR are annualized</span>\r\n      </div>\r\n      <ul>\r\n        {benchmarksData.map(({ id, title, allocations, indices }) => (\r\n          <BenchmarkItem\r\n            key={id}\r\n            id={id}\r\n            title={title}\r\n            allocations={allocations}\r\n            indices={indices}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </BenchmarksListContainer>\r\n  );\r\n}\r\n\r\nexport default BenchmarksList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  padding: 30px 20px;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n`;\r\n\r\nexport const StyledFlexContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledHeader = styled.h2`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const StyledText = styled.p`\r\n  margin-bottom: 20px;\r\n  line-height: 1.4;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const StyledSpan = styled.span`\r\n  margin-right: 20px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  width: 100px;\r\n  padding: 5px;\r\n  font-size: 10px;\r\n  border: 1px solid #5c5cfa;\r\n  border-radius: 5px;\r\n  color: #5c5cfa;\r\n  fill: #5c5cfa;\r\n`;\r\n\r\nexport const StyledButtonText = styled.span`\r\n  margin-left: 5px;\r\n`;\r\n","import { useState } from \"react\";\r\nimport BenchmarksData from \"../../../Utils/BenchmarksData\";\r\nimport { Benchmarks } from \"../../../Utils/Types\";\r\nimport Modal from \"../../Modal/Modal\";\r\nimport Svg from \"../../Svg/Svg\";\r\nimport AddBenchmarkForm from \"../AddBenchmarkForm/AddBenchmarkForm\";\r\nimport BenchmarksList from \"../BenchmarksList/BenchmarksList\";\r\nimport {\r\n  StyledButton,\r\n  StyledButtonText,\r\n  StyledContainer,\r\n  StyledFlexContainer,\r\n  StyledHeader,\r\n  StyledLabel,\r\n  StyledSpan,\r\n  StyledText,\r\n} from \"./BenchmarksTableStyled\";\r\n\r\nconst BenchmarksTable = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showBenchmarks, setShowBenchmarks] = useState(true);\r\n  const [benchmarksData, setBenchmarksData] = useState<Benchmarks[]>([\r\n    ...BenchmarksData,\r\n  ]);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal((prevState) => !prevState);\r\n  };\r\n\r\n  const handleChange = () => {\r\n    setShowBenchmarks((prevState) => !prevState);\r\n  };\r\n\r\n  const handleBenchmarksData = (benchmark: Benchmarks) => {\r\n    const updateBenchmarksData = benchmarksData.map((item) =>\r\n      item.id === benchmark.id ? benchmark : item\r\n    );\r\n    setBenchmarksData([...updateBenchmarksData]);\r\n  };\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <StyledFlexContainer>\r\n        {/* В макете Peformance, нужно уточнить */}\r\n        <StyledHeader>Total Performance Benchmarks</StyledHeader>\r\n\r\n        <StyledLabel>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showBenchmarks === true}\r\n            onChange={handleChange}\r\n          />{\" \"}\r\n          Enabled\r\n        </StyledLabel>\r\n      </StyledFlexContainer>\r\n      <StyledText>\r\n        These are comparative defaults that appear anywhere that total\r\n        performance for households or selected accounts are displayed. See an\r\n        example of how these will be displayed when your have{\" \"}\r\n        <a href=\"../../../public/index.html\">benchmarks assigned and enabled</a>\r\n        .\r\n      </StyledText>\r\n\r\n      <StyledSpan>{benchmarksData.length} of 3 Assigned</StyledSpan>\r\n      <StyledButton type=\"button\" onClick={toggleModal}>\r\n        <Svg icon=\"#icon-plus\" width=\"7px\" height=\"7px\" />\r\n        <StyledButtonText>Add New</StyledButtonText>\r\n      </StyledButton>\r\n      {showBenchmarks && <BenchmarksList benchmarksData={benchmarksData} />}\r\n\r\n      {showModal && (\r\n        <Modal closeModal={toggleModal}>\r\n          <AddBenchmarkForm\r\n            benchmarksData={benchmarksData}\r\n            closeModal={toggleModal}\r\n            onSubmit={handleBenchmarksData}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default BenchmarksTable;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  padding: 40px 20px;\r\n`;\r\n\r\nexport const StyledFlexContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledHeader = styled.h1`\r\n  font-size: 28px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 180px;\r\n  padding: 5px 10px;\r\n  font-size: 12px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #b6afaf;\r\n`;\r\n\r\nexport const StyledText = styled.p`\r\n  margin-bottom: 20px;\r\n  line-height: 1.4;\r\n  font-size: 12px;\r\n`;\r\n","import BenchmarksTable from \"./BenchmarksTable/BenchmarksTable\";\r\nimport Svg from \"../Svg/Svg\";\r\nimport {\r\n  StyledButton,\r\n  StyledContainer,\r\n  StyledFlexContainer,\r\n  StyledHeader,\r\n  StyledText,\r\n} from \"./BenchmarksStyled\";\r\n\r\nconst Benchmarks = () => {\r\n  return (\r\n    <StyledContainer>\r\n      <StyledFlexContainer>\r\n        <StyledHeader>Performance and Benchmarks</StyledHeader>\r\n        <StyledButton>\r\n          <Svg icon=\"#icon-cog\" />\r\n          Perfomance Settings\r\n          <Svg icon=\"#icon-share\" />\r\n        </StyledButton>\r\n      </StyledFlexContainer>\r\n\r\n      <StyledText>\r\n        Define and control your settings for displaying benchmarks. See our{\" \"}\r\n        <a href=\"../../../public/index.html\">list of indices</a> you can choose\r\n        from.\r\n      </StyledText>\r\n      <BenchmarksTable />\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Benchmarks;\r\n","import React from \"react\";\nimport Benchmarks from \"./Components/Benchmarks/Benchmarks\";\n\nfunction App() {\n  return <Benchmarks />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}